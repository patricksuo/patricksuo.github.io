<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on blog.su21.org</title>
    <link>http://blog.su21.org/posts/</link>
    <description>Recent content in Posts on blog.su21.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 04 Sep 2018 01:24:36 +0800</lastBuildDate>
    
        <atom:link href="http://blog.su21.org/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>服务故障自动恢复</title>
      <link>http://blog.su21.org/posts/options_about_service_failure_and_auto_recovery/</link>
      <pubDate>Tue, 04 Sep 2018 01:24:36 +0800</pubDate>
      
      <guid>http://blog.su21.org/posts/options_about_service_failure_and_auto_recovery/</guid>
      <description>&lt;p&gt;达达对服务器 crash 自动重启表示过反对。但鹅厂有种服务故障快速拉起的传统。&lt;/p&gt;

&lt;p&gt;一开始我以为是两种大相径庭的观点，为此很困惑。
后来又觉得这两套不同的技术体系会有殊途同归之处。&lt;/p&gt;

&lt;p&gt;『故障快速拉起』或者说『服务故障自动恢复』。
本质上意图是提高服务可用性。&lt;/p&gt;

&lt;p&gt;达达不喜欢 crash 自动重启，但他的框架有很好的异常管理。
我想:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;意图与目的上 1) 进程内异常捕获与恢复 和 2) 外部重启 crash 的服务进程 两者是相同的&lt;/li&gt;
&lt;li&gt;具体操作上，判断 1) crash 是否能自动重启解决 与 2)异常是否可捕获恢复 两者也没有本质区别&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;同一个目的，有两种看起来截然不同的手段，我大概想了以下原因:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;技术特点&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;达达的游戏框架对可恢复的异常有充分管理进程本身不会轻易crash，除非遇到致命错误。&lt;/p&gt;

&lt;p&gt;鹅厂常用 C++ 。
业务逻辑产生的异常未必容易捕获，
但 共享内存+无状态进程+快速重启进程+接入层重试 同样能做一些异常恢复。&lt;/p&gt;

&lt;p&gt;其实发现两套不同的实践都达到了类似的目的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;规模&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;在开发规模很大 (比如很多人月、特性、LOC) 的情况下，
无状态服务 &lt;em&gt;可能&lt;/em&gt; 是一个比达达那套框架更容易实施方案。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;组织架构&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;达达是 CTO ，同时兼顾开发和运维职责。
他的程序在设计的时候就有考虑运维简单与可用性。&lt;/p&gt;

&lt;p&gt;接入腾讯的游戏厂商和腾讯互娱运维是天然的 dev 与 op 分离。
程序能 crash 后快速拉起是让运维很舒服的事情，但 开发商未必有动力。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>http://blog.su21.org/posts/hello/</link>
      <pubDate>Sun, 19 Aug 2018 15:59:02 +0800</pubDate>
      
      <guid>http://blog.su21.org/posts/hello/</guid>
      <description>&lt;p&gt;just hello world!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;package&lt;/span&gt; main

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;func&lt;/span&gt; main() {
    fmt.Println(&lt;span style=&#34;color:#ba2121&#34;&gt;&amp;#34;hello world!&amp;#34;&lt;/span&gt;)
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>